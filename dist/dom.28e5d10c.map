{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","textContent","innerText","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.28e5d10c.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n      const container = document.createElement('template')\r\n      container.innerHTML = string.trim();//trim的功能就是把文本两边的空格去掉，让他不会变成文本格式。\r\n      return container.content.firstChild;\r\n    },\r\n    after(node, node2){\r\n      node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    before(node,node2){\r\n      node.parentNode.insertBefore(node2,node);  \r\n    },\r\n    append(parent,node){\r\n      parent.appendChild(node);\r\n    },\r\n    wrap(node,parent){\r\n      dom.before(node,parent);\r\n      dom.append(parent,node);\r\n    },\r\n    remove(node){\r\n      node.parentNode.removeChild(node);\r\n      return node;\r\n    },\r\n    empty(node){\r\n      const{childNodes} = node;\r\n      const array = [];\r\n      let x = node.firstChild;\r\n      while(x){\r\n        array.push(dom.remove(node.firstChild))\r\n        x = node.firstChild\r\n        }\r\n        return array\r\n      },\r\n    attr(node,name,value){ //重载\r\n      if(arguments.length ===3){\r\n       return node.setAttribute(name,value)\r\n    }else if(arguments.length ===2){\r\n      return node.getAttribute(name)\r\n      }\r\n    },\r\n    text(node,string){//适配写法\r\n      if(arguments.length ===2){\r\n        if('innerText' in node){\r\n          node.innerHTML = string\r\n        }else{\r\n          node.textContent = string\r\n        }\r\n      }else if (arguments.length === 1){\r\n        if('innerText' in node){\r\n          return node.innerText\r\n        }else{\r\n          return node.textContent\r\n        }\r\n      }\r\n    //   node.innerText = string//有一些非常旧的IE只支持这个写法。\r\n    //   node.textContent = string//firefox/chrome的写法\r\n    },\r\n    html(node,string){\r\n      if(arguments.length ===2){\r\n        node.innerHTML = string\r\n      }else if(arguments.length === 1){\r\n        node.innerHTML = string\r\n      }\r\n    },\r\n      style(node,name, value){\r\n        if(arguments.length === 3){\r\n          //dom.style(div,'color','red')\r\n          node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n          if(typeof name === 'string'){\r\n            //dom.style(div,'color')\r\n            return node.style[name]\r\n          }else if(name instanceof Object){\r\n            //dom.style(div,{color:'red'})\r\n            const object = name\r\n            for(let key in object){\r\n              node.style[key] = object[key] \r\n          }\r\n        }\r\n      }\r\n    },\r\n    class:{\r\n      add(node,className){\r\n        node.classList.add(className)\r\n      },\r\n      remove(node,className){\r\n        node.classList.remove(className)\r\n      },\r\n      has(node,className){\r\n        return node.classList.contains(className)\r\n      }\r\n    },\r\n    on(node,eventName,fn){\r\n      node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n      node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector, scope){\r\n      return (scope ||document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n      return node.parentNode\r\n    },\r\n    children(node){\r\n      return node.children\r\n    },\r\n    siblings(node){\r\n      return Array.from(node.parentNode.children)\r\n      .filter(n => n !==node)\r\n    },\r\n    next(node){\r\n      let x = node.nextSibling\r\n      while( x  && x.nodeType ===3){\r\n        x =x.nextSibling\r\n      }\r\n      return x\r\n    },\r\n    previous(node){\r\n      let x = node.previousSibling\r\n      while( x  && x.nodeType ===3){\r\n        x =x.previousSibling\r\n      }\r\n      return x\r\n    },\r\n    each(nodeList,fn){\r\n      for(let i = 0; i <nodeList.length; i++){\r\n        fn.call(null,nodeList[i])\r\n      }\r\n    },\r\n    index(node){\r\n       const list = dom.children(node.parentNode)\r\n       let i\r\n       for(i = 0;i<list.length;i++){\r\n         if(list[i] === node){\r\n           break\r\n         }\r\n       }\r\n       return i\r\n    },\r\n};"]}